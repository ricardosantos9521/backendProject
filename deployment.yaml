apiVersion: apps/v1
kind: Deployment
metadata:
  name: backendproject-dpl
  namespace: project
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 2
  selector:
    matchLabels:
      app: backendproject
  template:
    metadata:
       labels:
         app: backendproject
    spec:
      containers:
      - name: backendproject
        image: "docker.pkg.github.com/ricardosantos9521/backendproject/backendproject:BUILDNUMBER"
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 500m
            memory: 250Mi
          requests:
            cpu: 250m
            memory: 125Mi
        env:
        - name: "ASPNETCORE_ENVIRONMENT"
          value: "Production"
        - name: "ConnectionMySql" 
          valueFrom:
            secretKeyRef:
              name: backendproject
              key: connectionpath
        - name: "SecretKey" 
          valueFrom:
            secretKeyRef:
              name: backendproject
              key: secretkey
        readinessProbe:
          httpGet:
             path: /api/readiness/
             port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
      imagePullSecrets:
      - name: dockerregistrysecret-github
---
apiVersion: v1
kind: Service
metadata:
  name: backendproject-svc
  namespace: project
spec:
  selector:
    app: backendproject
  ports:
  - port: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: backendproject-ing
  namespace: project
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/ingress.allow-http: "false"
spec:
  tls:
  - hosts:
    - ricspt.ddns.net
    secretName: tlscert
  rules:
  - host: ricspt.ddns.net
    http:
      paths:
      - path: /backendproject/(.*)
        backend:
          serviceName: backendproject-svc
          servicePort: 80